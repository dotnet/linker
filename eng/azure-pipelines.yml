variables:
- group: DotNet-HelixApi-Access # TODO: make available internally only
- group: DotNet-Blob-Feed
- name: _DotNetPublishToBlobFeed
  value: true
- name: _BuildConfig
  value: Release
- name: _PublishArgs
         # these args are for publish only AFAIK
  value: /p:DotNetPublishToBlobFeed=$(_DotNetPublishToBlobFeed)
         /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
         /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
         # this I believe is used for publish and pack?? maybe also build, for versioning...
         /p:OfficialBuildId=$(Build.BuildNumber)
  # _SignType is used for microbuild install step
  # DotNetSignType needs to be passed for the arcade signing targets
  # required by microbuild install step
- name: _TeamName
  value: .NET

jobs:
- template: /eng/common/templates/job/job.yml
  parameters:
    name: build_linux
    displayName: Build linker on linux
    enableTelemetry: true
    enableMicrobuild: true
    pool:
      'Hosted Ubuntu 1604' # available on internal and public. recommended for both.
    # Publish asset manifests to pipeline storage
    enablePublishBuildAssets: true
    # enablePublishTestResults
    # Publish build logs to pipeline storage
    enablePublishBuildArtifacts: true
    helixRepo: 'mono/linker'
    steps:
    - checkout: self
      submodules: true
    - script: eng/common/cibuild.sh --projects $(Build.SourcesDirectory)/illink.sln --configuration $(_BuildConfig) $(_PublishArgs) /p:ArcadeBuild=true

- template: /eng/common/templates/job/job.yml
  parameters:
    name: build_windows
    displayName: Build linker on windows
    enableTelemetry: true
    enableMicrobuild: true
    pool:
      'dotnet-internal-temp' # internal
      # for public, need to use 'Hosted VS2017'
    enablePublishBuildAssets: true
    enablePublishBuildArtifacts: true
    helixRepo: 'mono/linker'
    steps:
    - checkout: self
      submodules: true
    - script: eng\common\cibuild.cmd -projects $(Build.SourcesDirectory)\illink.sln -configuration $(_BuildConfig) $(_PublishArgs) /p:ArcadeBuild=true