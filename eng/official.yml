# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
    - mono-*
pr:
  branches:
    include:
    - main
    - release/*
    - mono-*
    - feature/*
variables:
- name: officialBuild
  value: ${{ and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}
- name: _BuildConfig
  value: Release
- name: _BuildArgs
  value: ''
- name: _DotNetArtifactsCategory
  value: .NETCore
- ${{ if eq(variables.officialBuild, 'true') }}:
  - name: _BuildArgs
    value: ${{ format('{0} /p:OfficialBuildId=$(Build.BuildNumber) /p:Test=false /p:IntegrationTest=false', variables['_BuildArgs']) }}
  - group: DotNet-HelixApi-Access
  - name: Codeql.Enabled
    value: True
  - name: Codeql.TSAEnabled
    value: True
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates/jobs/jobs.yml@self
        parameters:
          enableTelemetry: true
          helixRepo: dotnet/linker
          enablePublishUsingPipelines: true
          enablePublishBuildArtifacts: true
          ${{ if eq(variables.officialBuild, 'false') }}:
            enablePublishTestResults: true
            testResultsFormat: vstest
          enablePublishBuildAssets: true
          enableMicrobuild: true
          jobs:
          - job: Windows_NT
            pool:
              ${{ if eq(variables.officialBuild, 'false') }}:
                vmImage: windows-latest
              ${{ if eq(variables.officialBuild, 'true') }}:
                name: NetCore1ESPool-Internal
                demands: ImageOverride -equals 1es-windows-2019
            variables:
            - ${{ if eq(variables.officialBuild, 'false') }}:
              - _SignType: test
              - _PublishArgs: ''
            - ${{ if eq(variables.officialBuild, 'true') }}:
              - group: DotNet-Blob-Feed
              - _TeamName: .NET
              - _SignType: real
              - _DotNetPublishToBlobFeed: true
              - _PublishArgs: /p:DotNetPublishToBlobFeed=$(_DotNetPublishToBlobFeed) /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1) /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory) /p:DotNetPublishUsingPipelines=true
            - DotNetSignType: ${{ format('{0}', variables._SignType) }}
            steps:
            - checkout: self
              submodules: true
            - script: eng\common\cibuild.cmd -projects $(Build.SourcesDirectory)\illink.sln -configuration $(_BuildConfig) $(_BuildArgs) $(_PublishArgs) -integrationTest -nodeReuse "$false"
              env:
                MSBUILDENSURESTDOUTFORTASKPROCESSES: 1
              ${{ if eq(variables.officialBuild, 'false') }}:
                displayName: Build illink.sln $(_BuildConfig)
              ${{ if eq(variables.officialBuild, 'true') }}:
                displayName: Build and publish illink.sln $(_BuildConfig)
          - job: SourceBuild_Managed
            displayName: Source-Build (Managed)
            pool:
              ${{ if eq(variables.officialBuild, 'false' )}}:
                vmImage: ubuntu-latest
              ${{ if eq(variables.officialBuild, 'true' )}}:
                name: NetCore1ESPool-Internal
                demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
            container: 'mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7'
            workspace:
              clean: all
            templateContext:
              outputs:
              - output: pipelineArtifact
                displayName: 'Publish BuildLogs'
                condition: succeededOrFailed()
                targetPath: '$(Build.StagingDirectory)/BuildLogs'
                artifactName: BuildLogs_SourceBuild_${{ parameters.platform.name }}_Attempt$(System.JobAttempt)
            steps:
            - checkout: self
              submodules: true
            - template: /eng/common/templates/steps/source-build.yml
              parameters:
                enablePublishTestResults: true
          - ${{ if eq(variables.officialBuild, 'false') }}:
            - job: Linux
              condition: eq(variables.officialBuild, 'false')
              pool:
                vmImage: ubuntu-latest
              steps:
              - checkout: self
                submodules: true
              - script: eng/common/cibuild.sh --projects $(Build.SourcesDirectory)/illink.sln --configuration $(_BuildConfig) $(_BuildArgs) --integrationTest --nodeReuse false
                env:
                  MSBUILDENSURESTDOUTFORTASKPROCESSES: 1
                displayName: Build illink.sln $(_BuildConfig)
          - ${{ if eq(variables.officialBuild, 'false') }}:
            - job: macOS
              pool:
                vmImage: macOS-latest
              steps:
              - checkout: self
                submodules: true
              - script: eng/common/cibuild.sh --projects $(Build.SourcesDirectory)/illink.sln
                        --configuration $(_BuildConfig) $(_BuildArgs)
                        --integrationTest
                        --nodeReuse false # https://github.com/Microsoft/vstest/issues/1503
                env:
                  # https://github.com/Microsoft/vstest/issues/1503#issuecomment-410732193
                  MSBUILDENSURESTDOUTFORTASKPROCESSES: 1
                displayName: Build illink.sln $(_BuildConfig)

      - ${{ if eq(variables.officialBuild, 'false') }}:
        - job: Lint
          steps:
          - checkout: self
            submodules: true
          - script: ./lint.sh --verify-no-changes --verbosity diagnostic
    - ${{ if eq(variables.officialBuild, 'true') }}:
      - template: /eng/common/templates/post-build/post-build.yml@self
        parameters:
          publishingInfraVersion: 3