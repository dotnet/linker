<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Condition=" $(Configuration.StartsWith('illink')) ">
    <AssemblyName>illink</AssemblyName>
    <Description>IL Linker</Description>
    <DefineConstants>$(DefineConstants);FEATURE_ILLINK</DefineConstants>
    <!-- net46 build is disabled until cecil uses SDK-style projects. -->
    <TargetFrameworks>netcoreapp2.0</TargetFrameworks>
    <TargetFrameworks Condition=" '$(MSBuildRuntimeType)' == 'Core' And '$(OS)' != 'Windows_NT' ">netcoreapp2.0</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Condition=" ! $(Configuration.StartsWith('illink')) ">
    <AssemblyName>monolinker</AssemblyName>
    <AssemblyTitle>Mono.Linker</AssemblyTitle>
    <Description>Mono CIL Linker</Description>
    <TargetFrameworks>net471</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <RootNamespace>Mono</RootNamespace>
    <Copyright>(C) 2006, Jb Evain</Copyright>
    <Version>0.2.0.0</Version>
  </PropertyGroup>

  <PropertyGroup Condition=" $(Configuration.EndsWith('Debug')) ">
    <DebugSymbols Condition=" '$(DebugSymbols)' == '' ">true</DebugSymbols>
    <Optimize Condition=" '$(Optimize)' == '' ">false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" $(Configuration.EndsWith('Release')) ">
    <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\external\cecil\Mono.Cecil.csproj" />
    <ProjectReference Include="..\..\external\cecil\symbols\mdb\Mono.Cecil.Mdb.csproj" />
    <ProjectReference Include="..\..\external\cecil\symbols\pdb\Mono.Cecil.Pdb.csproj" />
  </ItemGroup>

  <!-- When publishing illink as a dependency of ILLink.Tasks, we want
       to include files needed to run it as an application in the
       publish output. See https://github.com/dotnet/sdk/issues/1675. -->
  <Target Name="AddRuntimeDependenciesToContent"
          BeforeTargets="GetCopyToOutputDirectoryItems"
          DependsOnTargets="GenerateBuildDependencyFile;GenerateBuildRuntimeConfigurationFiles"
          Condition=" '$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <ItemGroup>
      <ContentWithTargetPath Include="$(ProjectDepsFilePath)" CopyToOutputDirectory="PreserveNewest" TargetPath="$(ProjectDepsFileName)" />
      <ContentWithTargetPath Include="$(ProjectRuntimeConfigFilePath)" CopyToOutputDirectory="PreserveNewest" TargetPath="$(ProjectRuntimeConfigFileName)" />
    </ItemGroup>
  </Target>

</Project>
