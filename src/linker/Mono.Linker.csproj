<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MonoBuild)' == ''">
    <DefineConstants>$(DefineConstants);FEATURE_ILLINK</DefineConstants>
    <IsPackable>true</IsPackable>
    <!-- Nuget issues a warning about missing <reference> items in the generated nuspec,
         used for packages.config which we do not support. -->
    <NoWarn>$(NoWarn);NU5131</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MonoBuild)' != ''">
    <AssemblyName>monolinker</AssemblyName>
    <AssemblyTitle>Mono.Linker</AssemblyTitle>
    <Description>Mono CIL Linker</Description>
    <Copyright>(C) 2006, Jb Evain</Copyright>
    <TargetFramework>net471</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="ref\**\*.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(MonoBuild)' == ''">
    <Compile Remove="Linker\I18nAssemblies.cs" />
    <Compile Remove="Linker\XApiReader.cs" />
    <Compile Remove="Linker.Steps\LoadI18nAssemblies.cs" />
    <Compile Remove="Linker.Steps\PreserveCalendarsStep.cs" />
    <Compile Remove="Linker.Steps\ResolveFromXApiStep.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Condition="'$(UseCecilPackage)' == 'true'" Include="Mono.Cecil" Version="$(MonoCecilVersion)" />
    <PackageReference Include="System.Text.Json" Version="4.7.1" />
    <ProjectReference Condition="'$(UseCecilPackage)' != 'true'" Include="..\..\external\cecil\Mono.Cecil.csproj" />
    <ProjectReference Condition="'$(UseCecilPackage)' != 'true'" Include="..\..\external\cecil\symbols\pdb\Mono.Cecil.Pdb.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(MonoBuild)' != ''">
    <ProjectReference Condition="'$(UseCecilPackage)' != 'true'" Include="..\..\external\cecil\symbols\mdb\Mono.Cecil.Mdb.csproj" />
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="1.1.0" />
  </ItemGroup>

  <!-- When publishing illink as a dependency of ILLink.Tasks, we want
       to include files needed to run it as an application in the
       publish output. See https://github.com/dotnet/sdk/issues/1675. -->
  <Target Name="AddRuntimeDependenciesToContent" BeforeTargets="GetCopyToOutputDirectoryItems" DependsOnTargets="GenerateBuildDependencyFile;GenerateBuildRuntimeConfigurationFiles" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <ItemGroup>
      <ContentWithTargetPath Include="$(ProjectDepsFilePath)" CopyToOutputDirectory="PreserveNewest" TargetPath="$(ProjectDepsFileName)" />
      <ContentWithTargetPath Include="$(ProjectRuntimeConfigFilePath)" CopyToOutputDirectory="PreserveNewest" TargetPath="$(ProjectRuntimeConfigFileName)" />
    </ItemGroup>
  </Target>

</Project>
