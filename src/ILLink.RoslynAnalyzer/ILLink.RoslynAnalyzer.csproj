<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <OutputType>Library</OutputType>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <AutoGenerateAssemblyVersion>true</AutoGenerateAssemblyVersion>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- There are currently no translations, so the satellite assemblies are a waste of space. -->
    <EnableXlfLocalization>false</EnableXlfLocalization>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <AnalysisLevel>Latest</AnalysisLevel>
    <NoWarn Condition="'$(DotNetBuildFromSource)' == 'true'">$(NoWarn);CS8524</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <None Include="Microsoft.NET.ILLink.Analyzers.props" CopyToOutputDirectory="PreserveNewest" />
    <!-- The repo CodeAnalyis version may be ahead of what is shipped with Visual Studio, so that version may break the analyzers when used in .Net Framework builds -->
    <!-- If this happens, pin the version of Microsoft.CodeAnalysis.CSharp here, but not in source-build -->
    <PackageReference Condition="'$(DotNetBuildFromSource)' != 'true'" Include="Microsoft.CodeAnalysis.CSharp" Version="$(MicrosoftCodeAnalysisVersion)" PrivateAssets="all" />
    <!-- Source-build must always build with the $(MicrosoftCodeAnalysisVersion) to prevent introducing prebuilts. -->
    <PackageReference Condition="'$(DotNetBuildFromSource)' == 'true'" Include="Microsoft.CodeAnalysis.CSharp" Version="$(MicrosoftCodeAnalysisVersion)" PrivateAssets="all" />
    <PackageReference Condition="'$(DotNetBuildFromSource)' != 'true'" Include="StaticCs" Version="$(StaticCsVersion)">
      <PrivateAssets>all</PrivateAssets>
      <ExcludeAssets>contentfiles</ExcludeAssets> <!-- We include our own copy of the ClosedAttribute to work in source build -->
    </PackageReference>
  </ItemGroup>

  <Import Project="..\ILLink.Shared\ILLink.Shared.projitems" Label="Shared" />

</Project>
