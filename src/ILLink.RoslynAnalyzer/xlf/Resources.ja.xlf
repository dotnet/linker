<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../Resources.resx">
    <body>
      <trans-unit id="AvoidAssemblyGetFilesInSingleFileMessage">
        <source>'{0}' will throw for assemblies embedded in a single-file app</source>
        <target state="new">'{0}' will throw for assemblies embedded in a single-file app</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidAssemblyGetFilesInSingleFileTitle">
        <source>Avoid accessing Assembly file path when publishing as a single file</source>
        <target state="new">Avoid accessing Assembly file path when publishing as a single file</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidAssemblyLocationInSingleFileMessage">
        <source>'{0}' always returns an empty string for assemblies embedded in a single-file app. If the path to the app directory is needed, consider calling 'System.AppContext.BaseDirectory'.</source>
        <target state="new">'{0}' always returns an empty string for assemblies embedded in a single-file app. If the path to the app directory is needed, consider calling 'System.AppContext.BaseDirectory'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidAssemblyLocationInSingleFileTitle">
        <source>Avoid accessing Assembly file path when publishing as a single file</source>
        <target state="new">Avoid accessing Assembly file path when publishing as a single file</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresAssemblyFilesMessage">
        <source>Calling '{0}' which has `RequiresAssemblyFilesAttribute` can break functionality when bundling the application code. {1}. {2}</source>
        <target state="new">Calling '{0}' which has `RequiresAssemblyFilesAttribute` can break functionality when bundling the application code. {1}. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresAssemblyFilesTitle">
        <source>RequiresAssemblyFilesAnalyzer</source>
        <target state="new">RequiresAssemblyFilesAnalyzer</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresUnreferencedCodeAnalyzerMessage">
        <source>Calling '{0}' which has `RequiresUnreferencedCodeAttribute` can break functionality when trimming application code. {1}. {2}</source>
        <target state="new">Calling '{0}' which has `RequiresUnreferencedCodeAttribute` can break functionality when trimming application code. {1}. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresUnreferencedCodeAnalyzerTitle">
        <source>RequiresUnreferencedCodeAnalyzer</source>
        <target state="new">RequiresUnreferencedCodeAnalyzer</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>